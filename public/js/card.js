function encodeForAjax(e){return null==e?null:Object.keys(e).map(function(t){return encodeURIComponent(t)+"="+encodeURIComponent(e[t])}).join("&")}function sendAjaxRequest(e,t,n,o){let a=new XMLHttpRequest;a.open(e,t,!0),a.setRequestHeader("X-CSRF-TOKEN",document.querySelector('meta[name="csrf-token"]').content),a.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),a.addEventListener("load",o),a.send(encodeForAjax(n))}function opener(){var e=document.getElementById("shoppingCart");e.classList.toggle("active");var t=document.getElementById("overlay");t.classList.toggle("active")}function addToWishList(e){e.classList.toggle("active")}function addToComparison(e,t=!1){const n="comparisonData";if(t)eraseCookie(n),document.querySelectorAll(".addToCmp").forEach(e=>e.classList.remove("active")),document.querySelectorAll(".addToCmpBtn").forEach(e=>e.classList.remove("active"));else{e.classList.toggle("active");const t=e.closest(".prod").dataset.id,o=JSON.parse(getCookie(n));let a=[];null!==o&&(a=o),a.includes(""+t)?a=a.filter(e=>e!==t):a.push(t),a.length>3&&a.splice(a.length-3),setCookie(n,JSON.stringify(a))}null!==t&&updateComparison(!1)}function writeModal(e){e.classList.toggle("active")}function cartOpHandler(e){e.readyState===e.DONE&&200===e.status&&(console.log(e.response),console.log(e.responseText))}function updateCartValue(e,t){let n=document.getElementsByClassName("totalPrice")[0].getElementsByTagName("h3")[0];n.innerHTML=e?(Number.parseFloat(n.innerHTML)+t).toFixed(2):(Number.parseFloat(n.innerHTML)-t).toFixed(2),n.innerHTML<=0&&(n.innerHTML=0)}function plusOne(e,t,n,o){var a=e.parentElement.parentElement.getElementsByTagName("INPUT")[0],r=parseInt(a.value)+1;isNaN(r)&&(r=2),a.value=r,updateCartValue(!0,o),sendAjaxRequest("POST","/api/inc_prod",{product_id:t,cart_id:n},cartOpHandler)}function minusOne(e,t,n,o){var a=e.parentElement.parentElement.getElementsByTagName("INPUT")[0],r=parseInt(a.value)-1;isNaN(r)||r<0?r=0:(a.value=r,updateCartValue(!1,o),sendAjaxRequest("POST","/api/dec_prod",{product_id:t,cart_id:n},cartOpHandler))}function removeFromCart(e,t,n,o){let a=document.getElementsByClassName("cart-button-"+t);a.length>0&&a[0].classList.toggle("active"),console.log(n,t);let r=document.getElementById("product-quantity-"+t).value,s=o*r;r>0&&updateCartValue(!1,s);let l=document.getElementById("cart-product-"+t);l.remove(),sendAjaxRequest("POST","/api/remove_prod",{product_id:t,cart_id:n},cartOpHandler)}function createCartCard(e,t,n,o,a){let r=document.getElementById("shoppingCartCart"),s=r.innerHTML,l=s+'<article id="cart-product-'+n+'" class="m-2 p-2 d-flex justify-content-between align-items-center"> \n  <div class="w-50 d-flex justify-content-left align-items-center">   \n      <a href="/product/'+n+'" class="ml-4">\n          <h4 class="cartProductName">'+e+'</h4>\n      </a>\n  </div>\n  <div class="d-flex align-items-center">\n      <input id="product-quantity-'+n+'" type="text" class="form-control cartQuantitySelector" value=1 />\n      <div class="cartQuantitySelectorController d-flex flex-column align-items-center">\n          <button\n              class="btn cartQuantitySelectorControllerBtn button-toggable border border-white"\n              onclick="plusOne(this,'+n+","+o+","+t+')"\n              type="submit"\n          >\n              <i class="fas fa-plus"></i>\n          </button>\n          <button\n              class="btn cartQuantitySelectorControllerBtn button-toggable border border-white"\n              onclick="minusOne(this,'+n+","+o+","+t+')"\n              type="submit"\n          >\n              <i class="fas fa-minus"></i>\n          </button>\n      </div>\n  </div>\n<h4 class="cartProductSubTotal totalPrice">'+t+'</h4>\n  <button class="button-toggable btn border border-white" onclick="removeFromCart(this, '+n+","+o+","+t+')">\n      <i class="fas fa-times"></i>\n  </button>\n</article>';r.innerHTML=l}function addProductToCart(e,t,n,o,a,r,s){function l(){console.log(this.responseText);let e=JSON.parse(this.responseText);console.log(e)}e.classList.toggle("active"),-1!=t?(createCartCard(a,s,n,r,o),updateCartValue(!0,s),console.log(t,n,o),""!=t?sendAjaxRequest("POST","/api/add_product_cart",{product_id:n,client_id:t,quantity:o},l):console.log("User not logged in\n")):console.log("The Client must be logged in.\n")}function addProductButtonAction(e,t,n,o,a,r,s){e.classList.contains("active")?removeFromCart(e,n,r,s,o):addProductToCart(e,t,n,o,a,r,s)}function setCookie(e,t,n=8){var o="";if(n){var a=new Date;a.setTime(a.getTime()+24*n*60*60*1e3),o="; expires="+a.toUTCString()}document.cookie=e+"="+(t||"")+o+"; path=/"}function getCookie(e){for(var t=e+"=",n=document.cookie.split(";"),o=0;o<n.length;o++){for(var a=n[o];" "==a.charAt(0);)a=a.substring(1,a.length);if(0==a.indexOf(t))return a.substring(t.length,a.length)}return null}function eraseCookie(e){setCookie(e,"",-1)}